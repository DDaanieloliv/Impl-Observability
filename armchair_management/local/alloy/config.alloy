// ###############################################
// #### Logging Configuration ( Using files ) ####
// ###############################################


//local.file_match "local_files" {
//    path_targets = [{"__path__" = "/var/lib/docker/containers/*/*.log", "job" = "java-api", "hostname" = constants.hostname}]
//    sync_period  = "5s"
//}
//
//loki.source.file "log_scrape" {
//    targets    = local.file_match.local_files.targets
//    forward_to    = [loki.process.add_labels.receiver]
//    tail_from_end = true
//}
//
//loki.process "add_labels" {
//  stage.json {
//    expressions = {
//      log   = "",
//      time  = "",
//      stream = "",
//    }
//  }
//
//  stage.regex {
//    expression = ".*service=(?P<service>[^ ]+).*level=(?P<level>[^ ]+).*traceId=(?P<traceId>[^ ]+).*"
//  }
//
//  stage.labels {
//    values = {
//      service = "",
//      level   = "",
//      traceId = "",
//    }
//  }
//
//  stage.static_labels {
//    values = {
//      team = "backend",
//      env  = "production",
//    }
//  }
//
//  stage.timestamp {
//    source = "time"
//    format = "RFC3339Nano"
//  }
//
//  stage.output {
//    source = "log"
//  }
//
//  forward_to = [loki.write.local.receiver]
//}
//
//
//loki.write "local" {
//  endpoint {
//    url = "http://loki:3100/loki/api/v1/push"
//  }
//}



// #######################################################
// #### Logging Configuration ( Using OpenTelemetry ) ####
// #######################################################


logging {
  level  = "debug"
  format = "logfmt"
}

livedebugging {
  enabled = true
}

otelcol.receiver.otlp "default_logs" {
  http {
    endpoint="0.0.0.0:4444"
  }

  output {
    logs = [otelcol.exporter.loki.default.input]
  }
}


otelcol.exporter.loki "default" {
  forward_to = [loki.write.local.receiver]
}

loki.write "local" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}





// ###############################
// #### Traces Configuration #####
// ###############################


otelcol.receiver.otlp "default" {
  http {
    endpoint="0.0.0.0:4320"
  }

  output {
    traces = [otelcol.processor.batch.default.input]
  }
}

otelcol.processor.batch "default" {
  output {
    traces  = [otelcol.exporter.otlphttp.tempo.input]
  }
}

otelcol.exporter.otlphttp "tempo" {
    client {
        endpoint = "http://tempo:4318"
        tls {
            insecure             = true
            insecure_skip_verify = true
        }
    }
}


